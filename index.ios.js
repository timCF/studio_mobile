// Generated by LiveScript 1.5.0
(function(){
  var React, ref$, AppRegistry, Text, StyleSheet, View, styles, studio_mobile, jf, jQuery, bullet;
  React = require("react");
  ref$ = require("react-native"), AppRegistry = ref$.AppRegistry, Text = ref$.Text, StyleSheet = ref$.StyleSheet, View = ref$.View;
  styles = StyleSheet.create({
    container: {
      flex: 1,
      justifyContent: 'center',
      alignItems: 'center',
      backgroundColor: '#F5FCFF'
    },
    welcome: {
      fontSize: 20,
      textAlign: 'center',
      margin: 10
    },
    instructions: {
      textAlign: 'center',
      color: '#333333',
      marginBottom: 5
    }
  });
  studio_mobile = (function(superclass){
    var prototype = extend$((import$(studio_mobile, superclass).displayName = 'studio_mobile', studio_mobile), superclass).prototype, constructor = studio_mobile;
    studio_mobile.prototype.render = function(){
      return React.createElement(View, {
        style: styles.container
      }, [
        React.createElement(Text, {
          style: styles.welcome,
          key: "title"
        }, "Welcome to React Native!!!"), React.createElement(Text, {
          style: styles.instructions,
          key: "help"
        }, "To get started, edit index.ios.js"), React.createElement(Text, {
          style: styles.instructions,
          key: "instr"
        }, "Press Cmd+R to reload,\nCmd+D or shake for dev menu")
      ]);
    };
    function studio_mobile(){
      studio_mobile.superclass.apply(this, arguments);
    }
    return studio_mobile;
  }(React.Component));
  AppRegistry.registerComponent('studio_mobile', function(){
    return studio_mobile;
  });
  jf = require("jsfunky");
  jQuery = {
    ajax: require("component-ajax")
  };
  jQuery.extend = function(some){
    return jf.merge(jQuery, some);
  };
  global.jQuery = jQuery;
  require("bulletjs");
  bullet = jQuery.bullet("wss://ls.cu.cc/admin/bullet");
  bullet.onopen = function(){
    return console.log("соединение с сервером установлено");
  };
  bullet.ondisconnect = function(){
    return utils.error("соединение с сервером потеряно");
  };
  bullet.onclose = function(){
    return utils.warn("соединение с сервером закрыто");
  };
  bullet.onheartbeat = function(){
    return console.log("tick ...");
  };
  bullet.onmessage = function(data){
    return console.log(data);
  };
  function extend$(sub, sup){
    function fun(){} fun.prototype = (sub.superclass = sup).prototype;
    (sub.prototype = new fun).constructor = sub;
    if (typeof sup.extended == 'function') sup.extended(sub);
    return sub;
  }
  function import$(obj, src){
    var own = {}.hasOwnProperty;
    for (var key in src) if (own.call(src, key)) obj[key] = src[key];
    return obj;
  }
}).call(this);
